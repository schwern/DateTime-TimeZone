# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.01) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from Gaza.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::Asia::Gaza;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::Asia::Gaza::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
  {
    'short_name' => 'LMT',
    'utc_end' => '59950273328',
    'utc_start' => $DateTime::TimeZone::NEG_INFINITY,
    'local_end' => '59950281600',
    'is_dst' => 0,
    'offset' => 8272,
    'local_start' => '-inf'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61202037600',
    'utc_start' => '59950273328',
    'local_end' => '61202044800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '59950280528'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61278325200',
    'utc_start' => '61202037600',
    'local_end' => '61278336000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61202048400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61291382400',
    'utc_start' => '61278325200',
    'local_end' => '61291389600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61278332400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61309861200',
    'utc_start' => '61291382400',
    'local_end' => '61309872000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61291393200'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61322997600',
    'utc_start' => '61309861200',
    'local_end' => '61323004800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61309868400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61341483600',
    'utc_start' => '61322997600',
    'local_end' => '61341494400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61323008400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61355829600',
    'utc_start' => '61341483600',
    'local_end' => '61355836800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61341490800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61373026800',
    'utc_start' => '61355829600',
    'local_end' => '61373037600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61355840400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61387372800',
    'utc_start' => '61373026800',
    'local_end' => '61387380000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61373034000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61404555600',
    'utc_start' => '61387372800',
    'local_end' => '61404566400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61387383600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61453029600',
    'utc_start' => '61404555600',
    'local_end' => '61453036800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61404562800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61736594400',
    'utc_start' => '61453029600',
    'local_end' => '61736601600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61453036800'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61749032400',
    'utc_start' => '61736594400',
    'local_end' => '61749043200',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61736605200'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61767352800',
    'utc_start' => '61749032400',
    'local_end' => '61767360000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61749039600'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61780568400',
    'utc_start' => '61767352800',
    'local_end' => '61780579200',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61767363600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61798892400',
    'utc_start' => '61780568400',
    'local_end' => '61798899600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61780575600'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61812028800',
    'utc_start' => '61798892400',
    'local_end' => '61812039600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61798903200'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61830514800',
    'utc_start' => '61812028800',
    'local_end' => '61830522000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61812036000'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61843651200',
    'utc_start' => '61830514800',
    'local_end' => '61843662000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61830525600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61862050800',
    'utc_start' => '61843651200',
    'local_end' => '61862058000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61843658400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61875187200',
    'utc_start' => '61862050800',
    'local_end' => '61875198000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61862061600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61893586800',
    'utc_start' => '61875187200',
    'local_end' => '61893594000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61875194400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61906723200',
    'utc_start' => '61893586800',
    'local_end' => '61906734000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61893597600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61925122800',
    'utc_start' => '61906723200',
    'local_end' => '61925130000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61906730400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61938259200',
    'utc_start' => '61925122800',
    'local_end' => '61938270000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61925133600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61956745200',
    'utc_start' => '61938259200',
    'local_end' => '61956752400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61938266400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '61969881600',
    'utc_start' => '61956745200',
    'local_end' => '61969892400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61956756000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '61988281200',
    'utc_start' => '61969881600',
    'local_end' => '61988288400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '61969888800'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '62001417600',
    'utc_start' => '61988281200',
    'local_end' => '62001428400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '61988292000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '62019817200',
    'utc_start' => '62001417600',
    'local_end' => '62019824400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62001424800'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '62033040000',
    'utc_start' => '62019817200',
    'local_end' => '62033050800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62019828000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '62051353200',
    'utc_start' => '62033040000',
    'local_end' => '62051360400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62033047200'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '62054370000',
    'utc_start' => '62051353200',
    'local_end' => '62054380800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62051364000'
  },
  {
    'short_name' => 'IT',
    'utc_end' => '62278063200',
    'utc_start' => '62054370000',
    'local_end' => '62278070400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62054377200'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62286526800',
    'utc_start' => '62278063200',
    'local_end' => '62286537600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62278074000'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62302860000',
    'utc_start' => '62286526800',
    'local_end' => '62302867200',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62286534000'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62314347600',
    'utc_start' => '62302860000',
    'local_end' => '62314358400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62302870800'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62617960800',
    'utc_start' => '62314347600',
    'local_end' => '62617968000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62314354800'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62631262800',
    'utc_start' => '62617960800',
    'local_end' => '62631273600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62617971600'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62652434400',
    'utc_start' => '62631262800',
    'local_end' => '62652441600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62631270000'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62662107600',
    'utc_start' => '62652434400',
    'local_end' => '62662118400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62652445200'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62681119200',
    'utc_start' => '62662107600',
    'local_end' => '62681126400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62662114800'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62694162000',
    'utc_start' => '62681119200',
    'local_end' => '62694172800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62681130000'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62712223200',
    'utc_start' => '62694162000',
    'local_end' => '62712230400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62694169200'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62724920400',
    'utc_start' => '62712223200',
    'local_end' => '62724931200',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62712234000'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62745573600',
    'utc_start' => '62724920400',
    'local_end' => '62745580800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62724927600'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62756456400',
    'utc_start' => '62745573600',
    'local_end' => '62756467200',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62745584400'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62773999200',
    'utc_start' => '62756456400',
    'local_end' => '62774006400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62756463600'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62787301200',
    'utc_start' => '62773999200',
    'local_end' => '62787312000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62774010000'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62805448800',
    'utc_start' => '62787301200',
    'local_end' => '62805456000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62787308400'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62819355600',
    'utc_start' => '62805448800',
    'local_end' => '62819366400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62805459600'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62837503200',
    'utc_start' => '62819355600',
    'local_end' => '62837510400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62819362800'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62851410000',
    'utc_start' => '62837503200',
    'local_end' => '62851420800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62837514000'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62869384800',
    'utc_start' => '62851410000',
    'local_end' => '62869392000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62851417200'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62882859600',
    'utc_start' => '62869384800',
    'local_end' => '62882870400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62869395600'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62900834400',
    'utc_start' => '62882859600',
    'local_end' => '62900841600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62882866800'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62913704400',
    'utc_start' => '62900834400',
    'local_end' => '62913715200',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62900845200'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62932284000',
    'utc_start' => '62913704400',
    'local_end' => '62932291200',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62913711600'
  },
  {
    'short_name' => 'IDT',
    'utc_end' => '62945758800',
    'utc_start' => '62932284000',
    'local_end' => '62945769600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62932294800'
  },
  {
    'short_name' => 'IST',
    'utc_end' => '62956130400',
    'utc_start' => '62945758800',
    'local_end' => '62956137600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62945766000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '62964338400',
    'utc_start' => '62956130400',
    'local_end' => '62964345600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62956137600'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '62978850000',
    'utc_start' => '62964338400',
    'local_end' => '62978860800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62964349200'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '62995788000',
    'utc_start' => '62978850000',
    'local_end' => '62995795200',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '62978857200'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63010299600',
    'utc_start' => '62995788000',
    'local_end' => '63010310400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '62995798800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63027237600',
    'utc_start' => '63010299600',
    'local_end' => '63027244800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63010306800'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63041749200',
    'utc_start' => '63027237600',
    'local_end' => '63041760000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63027248400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63050824800',
    'utc_start' => '63041749200',
    'local_end' => '63050832000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63041756400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63059896800',
    'utc_start' => '63050824800',
    'local_end' => '63059904000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63050832000'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63075618000',
    'utc_start' => '63059896800',
    'local_end' => '63075628800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63059907600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63091951200',
    'utc_start' => '63075618000',
    'local_end' => '63091958400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63075625200'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63107672400',
    'utc_start' => '63091951200',
    'local_end' => '63107683200',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63091962000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63123400800',
    'utc_start' => '63107672400',
    'local_end' => '63123408000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63107679600'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63139122000',
    'utc_start' => '63123400800',
    'local_end' => '63139132800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63123411600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63154850400',
    'utc_start' => '63139122000',
    'local_end' => '63154857600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63139129200'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63170571600',
    'utc_start' => '63154850400',
    'local_end' => '63170582400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63154861200'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63186300000',
    'utc_start' => '63170571600',
    'local_end' => '63186307200',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63170578800'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63202021200',
    'utc_start' => '63186300000',
    'local_end' => '63202032000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63186310800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63217749600',
    'utc_start' => '63202021200',
    'local_end' => '63217756800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63202028400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63233470800',
    'utc_start' => '63217749600',
    'local_end' => '63233481600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63217760400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63249199200',
    'utc_start' => '63233470800',
    'local_end' => '63249206400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63233478000'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63265525200',
    'utc_start' => '63249199200',
    'local_end' => '63265536000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63249210000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63281253600',
    'utc_start' => '63265525200',
    'local_end' => '63281260800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63265532400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63296974800',
    'utc_start' => '63281253600',
    'local_end' => '63296985600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63281264400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63312703200',
    'utc_start' => '63296974800',
    'local_end' => '63312710400',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63296982000'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63328424400',
    'utc_start' => '63312703200',
    'local_end' => '63328435200',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63312714000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63344152800',
    'utc_start' => '63328424400',
    'local_end' => '63344160000',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63328431600'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63359874000',
    'utc_start' => '63344152800',
    'local_end' => '63359884800',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63344163600'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63375602400',
    'utc_start' => '63359874000',
    'local_end' => '63375609600',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63359881200'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63391323600',
    'utc_start' => '63375602400',
    'local_end' => '63391334400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63375613200'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63407052000',
    'utc_start' => '63391323600',
    'local_end' => '63407059200',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63391330800'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63422773200',
    'utc_start' => '63407052000',
    'local_end' => '63422784000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63407062800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63438501600',
    'utc_start' => '63422773200',
    'local_end' => '63438508800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63422780400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63454827600',
    'utc_start' => '63438501600',
    'local_end' => '63454838400',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63438512400'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63470556000',
    'utc_start' => '63454827600',
    'local_end' => '63470563200',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63454834800'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63486277200',
    'utc_start' => '63470556000',
    'local_end' => '63486288000',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63470566800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '63502005600',
    'utc_start' => '63486277200',
    'local_end' => '63502012800',
    'is_dst' => 0,
    'offset' => 7200,
    'local_start' => '63486284400'
  },
  {
    'short_name' => 'EEST',
    'utc_end' => '63517726800',
    'utc_start' => '63502005600',
    'local_end' => '63517737600',
    'is_dst' => 1,
    'offset' => 10800,
    'local_start' => '63502016400'
  }
]
;

my $max_year = 2013;

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}

my $rules = [
  bless( {
    'letter' => '',
    'on' => 'lastThu',
    'save' => '0',
    'to' => 'max',
    'from' => '1999',
    'in' => 'Sep',
    'at' => '0:00s',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'S',
    'on' => 'lastThu',
    'save' => '1:00',
    'to' => 'max',
    'from' => '2000',
    'in' => 'Mar',
    'at' => '0:00s',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'S',
    'on' => 'Fri>=15',
    'save' => '1:00',
    'to' => 'max',
    'from' => '1999',
    'in' => 'Apr',
    'at' => '0:00',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'D',
    'on' => '1',
    'save' => '1:00',
    'to' => 'max',
    'from' => '2005',
    'in' => 'Apr',
    'at' => '1:00',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => '',
    'on' => 'Fri>=15',
    'save' => '0',
    'to' => 'max',
    'from' => '1999',
    'in' => 'Oct',
    'at' => '0:00',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'S',
    'on' => '1',
    'save' => '0',
    'to' => 'max',
    'from' => '2005',
    'in' => 'Oct',
    'at' => '1:00',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' )
]
;
my $last_observance = bless( {
  'until' => undef,
  'format' => 'EE%sT',
  'gmtoff' => '2:00',
  'rules' => 'Palestine',
  'offset' => 7200,
  'start' => bless( {
    'local_rd_secs' => 0,
    'local_rd_days' => 729755,
    'language' => bless( {
      'month_numbers' => {},
      'am_pm' => [
        'AM',
        'PM'
      ],
      'ordinal_suffixes' => [],
      'month_abbreviations' => [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec'
      ],
      'day_abbreviations' => [
        'Mon',
        'Tue',
        'Wed',
        'Thu',
        'Fri',
        'Sat',
        'Sun'
      ],
      'month_names' => [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December'
      ],
      'day_numbers' => {},
      'day_names' => [
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday',
        'Sunday'
      ]
    }, 'DateTime::Language::English' ),
    'tz' => bless( {}, 'DateTime::TimeZone::UTC' ),
    'utc_rd_secs' => 0,
    'utc_rd_days' => 729755,
    'local_c' => {
      'hour' => 0,
      'minute' => 0,
      'second' => 0,
      'month' => 1,
      'day_of_year' => 1,
      'day_of_week' => 5,
      'day' => 1,
      'year' => 1999
    }
  }, 'DateTime' )
}, 'DateTime::TimeZone::OlsonDB::Observance' )
;

sub _generate_spans_until_match
{
    my $self = shift;
    my $dt = shift;

    my $generate_until_year = $dt->utc_year + 1;

    my @changes;
    foreach my $rule (@$rules)
    {
        foreach my $year ( $max_year .. $generate_until_year )
        {
            my $next = $rule->date_for_year( $year, 7200 );

            # don't bother with changes we've seen already
            next if $next->{utc}->utc_rd_as_seconds < $self->{max_span}{utc_end};

            push @changes,
                DateTime::TimeZone::OlsonDB::Change->new
                    ( start_date => $next->{local},
                      short_name =>
                      sprintf( $last_observance->format, $rule->letter ),
                      observance => $last_observance,
                      rule       => $rule,
                    );
        }
    }

    $max_year = $generate_until_year;
    my @sorted = sort { $a->start_date <=> $b->start_date } @changes;

    my $seconds = $dt->utc_rd_as_seconds;
    my $match;

    for ( my $x = 1; $x < @sorted; $x++ )
    {
        my $last_offset =
            $x == 1 ? $self->{max_span}{offset} : $changes[ $x - 2 ]->offset;

        my $span =
            DateTime::TimeZone::OlsonDB::Change::two_changes_as_span
                ( @sorted[ $x - 1, $x ], $last_offset );

        push @{ $self->{spans} }, $span;

        $match = $span
            if $seconds >= $span->{utc_start} && $seconds < $span->{utc_end};
    }

    return $match;
}


1;

