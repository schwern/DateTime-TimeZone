# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.06) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from ../../data/tz/Olson/europe.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::Europe::Moscow;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::Europe::Moscow::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
    [
DateTime::TimeZone::NEG_INFINITY,
59295533380,
DateTime::TimeZone::NEG_INFINITY,
59295542400,
9020,
0,
'LMT'
    ],
    [
59295533380,
60447418200,
59295542380,
60447427200,
9000,
0,
'MMT'
    ],
    [
60447418200,
60478864152,
60447427248,
60478873200,
9048,
0,
''
    ],
    [
60478864152,
60494329752,
60478876800,
60494342400,
12648,
1,
'MST'
    ],
    [
60494329752,
60507718152,
60494338800,
60507727200,
9048,
0,
'MMT'
    ],
    [
60507718152,
60516966552,
60507734400,
60516982800,
16248,
1,
'MDST'
    ],
    [
60516966552,
60539254152,
60516979200,
60539266800,
12648,
1,
'MST'
    ],
    [
60539254152,
60541853352,
60539270400,
60541869600,
16248,
1,
'MDST'
    ],
    [
60541853352,
60545826000,
60541864152,
60545836800,
10800,
0,
'MSK/MSD'
    ],
    [
60545826000,
60593256000,
60545836800,
60593266800,
10800,
0,
'MSK/MSD'
    ],
    [
60593256000,
60596190000,
60593270400,
60596204400,
14400,
1,
'MSK/MSD'
    ],
    [
60596190000,
60610359600,
60596208000,
60610377600,
18000,
1,
'MSK/MSD'
    ],
    [
60610359600,
60612955200,
60610374000,
60612969600,
14400,
1,
'MSK/MSD'
    ],
    [
60612955200,
60644494800,
60612966000,
60644505600,
10800,
0,
'MSK/MSD'
    ],
    [
60644494800,
60888146400,
60644502000,
60888153600,
7200,
0,
'EET'
    ],
    [
60888146400,
62490603600,
60888157200,
62490614400,
10800,
0,
'MSK/MSD'
    ],
    [
62490603600,
62506411200,
62490618000,
62506425600,
14400,
1,
'MSK/MSD'
    ],
    [
62506411200,
62522139600,
62506422000,
62522150400,
10800,
0,
'MSK/MSD'
    ],
    [
62522139600,
62537947200,
62522154000,
62537961600,
14400,
1,
'MSK/MSD'
    ],
    [
62537947200,
62553675600,
62537958000,
62553686400,
10800,
0,
'MSK/MSD'
    ],
    [
62553675600,
62569483200,
62553690000,
62569497600,
14400,
1,
'MSK/MSD'
    ],
    [
62569483200,
62585298000,
62569494000,
62585308800,
10800,
0,
'MSK/MSD'
    ],
    [
62585298000,
62601026400,
62585312400,
62601040800,
14400,
1,
'MSK/MSD'
    ],
    [
62601026400,
62616754800,
62601037200,
62616765600,
10800,
0,
'MSK/MSD'
    ],
    [
62616754800,
62632476000,
62616769200,
62632490400,
14400,
1,
'MSK/MSD'
    ],
    [
62632476000,
62648204400,
62632486800,
62648215200,
10800,
0,
'MSK/MSD'
    ],
    [
62648204400,
62663925600,
62648218800,
62663940000,
14400,
1,
'MSK/MSD'
    ],
    [
62663925600,
62679654000,
62663936400,
62679664800,
10800,
0,
'MSK/MSD'
    ],
    [
62679654000,
62695375200,
62679668400,
62695389600,
14400,
1,
'MSK/MSD'
    ],
    [
62695375200,
62711103600,
62695386000,
62711114400,
10800,
0,
'MSK/MSD'
    ],
    [
62711103600,
62726824800,
62711118000,
62726839200,
14400,
1,
'MSK/MSD'
    ],
    [
62726824800,
62742553200,
62726835600,
62742564000,
10800,
0,
'MSK/MSD'
    ],
    [
62742553200,
62758274400,
62742567600,
62758288800,
14400,
1,
'MSK/MSD'
    ],
    [
62758274400,
62774002800,
62758285200,
62774013600,
10800,
0,
'MSK/MSD'
    ],
    [
62774002800,
62790328800,
62774017200,
62790343200,
14400,
1,
'MSK/MSD'
    ],
    [
62790328800,
62806057200,
62790339600,
62806068000,
10800,
0,
'MSK/MSD'
    ],
    [
62806057200,
62821785600,
62806064400,
62821792800,
7200,
0,
'EET'
    ],
    [
62821785600,
62831462400,
62821792800,
62831469600,
7200,
0,
'EET'
    ],
    [
62831462400,
62868956400,
62831473200,
62868967200,
10800,
0,
'MSK/MSD'
    ],
    [
62868956400,
62884677600,
62868970800,
62884692000,
14400,
1,
'MSK/MSD'
    ],
    [
62884677600,
62900406000,
62884688400,
62900416800,
10800,
0,
'MSK/MSD'
    ],
    [
62900406000,
62916127200,
62900420400,
62916141600,
14400,
1,
'MSK/MSD'
    ],
    [
62916127200,
62931855600,
62916138000,
62931866400,
10800,
0,
'MSK/MSD'
    ],
    [
62931855600,
62963906400,
62931870000,
62963920800,
14400,
1,
'MSK/MSD'
    ],
    [
62963906400,
62982050400,
62963920800,
62982064800,
14400,
1,
'MSK/MSD'
    ],
    [
62982050400,
62995359600,
62982061200,
62995370400,
10800,
0,
'MSK/MSD'
    ],
    [
62995359600,
63013500000,
62995374000,
63013514400,
14400,
1,
'MSK/MSD'
    ],
    [
63013500000,
63026809200,
63013510800,
63026820000,
10800,
0,
'MSK/MSD'
    ],
    [
63026809200,
63044949600,
63026823600,
63044964000,
14400,
1,
'MSK/MSD'
    ],
    [
63044949600,
63058258800,
63044960400,
63058269600,
10800,
0,
'MSK/MSD'
    ],
    [
63058258800,
63077004000,
63058273200,
63077018400,
14400,
1,
'MSK/MSD'
    ],
    [
63077004000,
63089708400,
63077014800,
63089719200,
10800,
0,
'MSK/MSD'
    ],
    [
63089708400,
63108453600,
63089722800,
63108468000,
14400,
1,
'MSK/MSD'
    ],
    [
63108453600,
63121158000,
63108464400,
63121168800,
10800,
0,
'MSK/MSD'
    ],
    [
63121158000,
63139903200,
63121172400,
63139917600,
14400,
1,
'MSK/MSD'
    ],
    [
63139903200,
63153212400,
63139914000,
63153223200,
10800,
0,
'MSK/MSD'
    ],
    [
63153212400,
63171352800,
63153226800,
63171367200,
14400,
1,
'MSK/MSD'
    ],
    [
63171352800,
63184662000,
63171363600,
63184672800,
10800,
0,
'MSK/MSD'
    ],
    [
63184662000,
63202802400,
63184676400,
63202816800,
14400,
1,
'MSK/MSD'
    ],
    [
63202802400,
63216111600,
63202813200,
63216122400,
10800,
0,
'MSK/MSD'
    ],
    [
63216111600,
63234856800,
63216126000,
63234871200,
14400,
1,
'MSK/MSD'
    ],
    [
63234856800,
63247561200,
63234867600,
63247572000,
10800,
0,
'MSK/MSD'
    ],
    [
63247561200,
63266306400,
63247575600,
63266320800,
14400,
1,
'MSK/MSD'
    ],
    [
63266306400,
63279010800,
63266317200,
63279021600,
10800,
0,
'MSK/MSD'
    ],
    [
63279010800,
63297756000,
63279025200,
63297770400,
14400,
1,
'MSK/MSD'
    ],
    [
63297756000,
63310460400,
63297766800,
63310471200,
10800,
0,
'MSK/MSD'
    ],
    [
63310460400,
63329205600,
63310474800,
63329220000,
14400,
1,
'MSK/MSD'
    ],
    [
63329205600,
63342514800,
63329216400,
63342525600,
10800,
0,
'MSK/MSD'
    ],
    [
63342514800,
63360655200,
63342529200,
63360669600,
14400,
1,
'MSK/MSD'
    ],
    [
63360655200,
63373964400,
63360666000,
63373975200,
10800,
0,
'MSK/MSD'
    ],
    [
63373964400,
63392104800,
63373978800,
63392119200,
14400,
1,
'MSK/MSD'
    ],
    [
63392104800,
63405414000,
63392115600,
63405424800,
10800,
0,
'MSK/MSD'
    ],
    [
63405414000,
63424159200,
63405428400,
63424173600,
14400,
1,
'MSK/MSD'
    ],
    [
63424159200,
63436863600,
63424170000,
63436874400,
10800,
0,
'MSK/MSD'
    ],
    [
63436863600,
63455608800,
63436878000,
63455623200,
14400,
1,
'MSK/MSD'
    ],
    [
63455608800,
63468313200,
63455619600,
63468324000,
10800,
0,
'MSK/MSD'
    ],
    [
63468313200,
63487058400,
63468327600,
63487072800,
14400,
1,
'MSK/MSD'
    ],
    [
63487058400,
63500367600,
63487069200,
63500378400,
10800,
0,
'MSK/MSD'
    ],
    [
63500367600,
63518508000,
63500382000,
63518522400,
14400,
1,
'MSK/MSD'
    ],
];

sub _max_year { 2013 }

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}

sub _last_offset { 10800 }

my $last_observance = bless( {
  'until' => undef,
  'format' => 'MSK/MSD',
  'gmtoff' => '3:00',
  'rules' => 'Russia',
  'offset' => 10800,
  'start' => bless( {
    'local_rd_secs' => 7200,
    'local_rd_days' => 727216,
    'utc_year' => 1993,
    'rd_nanosecs' => 0,
    'tz' => bless( {}, 'DateTime::TimeZone::UTC' ),
    'local_c' => {
      'hour' => 2,
      'second' => 0,
      'month' => 1,
      'quarter' => 1,
      'day_of_year' => 19,
      'day_of_quarter' => 19,
      'minute' => 0,
      'day' => 19,
      'day_of_week' => 7,
      'year' => 1992
    },
    'utc_rd_secs' => 7200,
    'utc_rd_days' => 727216
  }, 'DateTime' )
}, 'DateTime::TimeZone::OlsonDB::Observance' )
;
sub _last_observance { $last_observance }

my $rules = [
  bless( {
    'letter' => '',
    'on' => 'lastSun',
    'save' => '0',
    'to' => 'max',
    'from' => '1996',
    'in' => 'Oct',
    'at' => '2:00s',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'S',
    'on' => 'lastSun',
    'save' => '1:00',
    'to' => 'max',
    'from' => '1993',
    'in' => 'Mar',
    'at' => '2:00s',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' )
]
;
sub _rules { $rules }


1;

