# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.03) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from ../../data/tz/Olson/europe.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::Europe::Luxembourg;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::Europe::Luxembourg::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
  {
    'short_name' => 'LMT',
    'utc_end' => '60065969724',
    'utc_start' => DateTime::TimeZone::NEG_INFINITY,
    'local_end' => '60065971200',
    'is_dst' => 0,
    'offset' => 1476,
    'local_start' => DateTime::TimeZone::NEG_INFINITY
  },
  {
    'short_name' => 'CET',
    'utc_end' => '60443186400',
    'utc_start' => '60065969724',
    'local_end' => '60443190000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '60065973324'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '60455199600',
    'utc_start' => '60443186400',
    'local_end' => '60455206800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '60443193600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '60473340000',
    'utc_start' => '60455199600',
    'local_end' => '60473343600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '60455203200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '60485526000',
    'utc_start' => '60473340000',
    'local_end' => '60485533200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '60473347200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '60503677200',
    'utc_start' => '60485526000',
    'local_end' => '60503680800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '60485529600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '60516979200',
    'utc_start' => '60503677200',
    'local_end' => '60516986400',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '60503684400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '60523023600',
    'utc_start' => '60516979200',
    'local_end' => '60523027200',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '60516982800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60531404400',
    'utc_start' => '60523023600',
    'local_end' => '60531404400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60523023600'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60550164000',
    'utc_start' => '60531404400',
    'local_end' => '60550167600',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60531408000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60561644400',
    'utc_start' => '60550164000',
    'local_end' => '60561644400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60550164000'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60583424400',
    'utc_start' => '60561644400',
    'local_end' => '60583428000',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60561648000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60595686000',
    'utc_start' => '60583424400',
    'local_end' => '60595686000',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60583424400'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60615133200',
    'utc_start' => '60595686000',
    'local_end' => '60615136800',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60595689600'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60628172400',
    'utc_start' => '60615133200',
    'local_end' => '60628172400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60615133200'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60645110400',
    'utc_start' => '60628172400',
    'local_end' => '60645114000',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60628176000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60662041200',
    'utc_start' => '60645110400',
    'local_end' => '60662041200',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60645110400'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60676563600',
    'utc_start' => '60662041200',
    'local_end' => '60676567200',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60662044800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60691676400',
    'utc_start' => '60676563600',
    'local_end' => '60691676400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60676563600'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60708009600',
    'utc_start' => '60691676400',
    'local_end' => '60708013200',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60691680000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60723817200',
    'utc_start' => '60708009600',
    'local_end' => '60723817200',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60708009600'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60739459200',
    'utc_start' => '60723817200',
    'local_end' => '60739462800',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60723820800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60756390000',
    'utc_start' => '60739459200',
    'local_end' => '60756390000',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60739459200'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60770908800',
    'utc_start' => '60756390000',
    'local_end' => '60770912400',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60756393600'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60787234800',
    'utc_start' => '60770908800',
    'local_end' => '60787234800',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60770908800'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60802358400',
    'utc_start' => '60787234800',
    'local_end' => '60802362000',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60787238400'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60819289200',
    'utc_start' => '60802358400',
    'local_end' => '60819289200',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60802358400'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60834412800',
    'utc_start' => '60819289200',
    'local_end' => '60834416400',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60819292800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60851343600',
    'utc_start' => '60834412800',
    'local_end' => '60851343600',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60834412800'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60865866000',
    'utc_start' => '60851343600',
    'local_end' => '60865869600',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60851347200'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60865869600',
    'utc_start' => '60865866000',
    'local_end' => '60865869600',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60865866000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60882199200',
    'utc_start' => '60865869600',
    'local_end' => '60882199200',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60865869600'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60897315600',
    'utc_start' => '60882199200',
    'local_end' => '60897319200',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60882202800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60914253600',
    'utc_start' => '60897315600',
    'local_end' => '60914253600',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60897315600'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60928765200',
    'utc_start' => '60914253600',
    'local_end' => '60928768800',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60914257200'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60944493600',
    'utc_start' => '60928765200',
    'local_end' => '60944493600',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60928765200'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60960214800',
    'utc_start' => '60944493600',
    'local_end' => '60960218400',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60944497200'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '60975338400',
    'utc_start' => '60960214800',
    'local_end' => '60975338400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60960214800'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '60992269200',
    'utc_start' => '60975338400',
    'local_end' => '60992272800',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '60975342000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61007997600',
    'utc_start' => '60992269200',
    'local_end' => '61007997600',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '60992269200'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61023718800',
    'utc_start' => '61007997600',
    'local_end' => '61023722400',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61008001200'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61038842400',
    'utc_start' => '61023718800',
    'local_end' => '61038842400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61023718800'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61055168400',
    'utc_start' => '61038842400',
    'local_end' => '61055172000',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61038846000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61072106400',
    'utc_start' => '61055168400',
    'local_end' => '61072106400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61055168400'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61086618000',
    'utc_start' => '61072106400',
    'local_end' => '61086621600',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61072110000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61102346400',
    'utc_start' => '61086618000',
    'local_end' => '61102346400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61086618000'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61118067600',
    'utc_start' => '61102346400',
    'local_end' => '61118071200',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61102350000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61133191200',
    'utc_start' => '61118067600',
    'local_end' => '61133191200',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61118067600'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61149517200',
    'utc_start' => '61133191200',
    'local_end' => '61149520800',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61133194800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61166455200',
    'utc_start' => '61149517200',
    'local_end' => '61166455200',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61149517200'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61185200400',
    'utc_start' => '61166455200',
    'local_end' => '61185204000',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61166458800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61193671200',
    'utc_start' => '61185200400',
    'local_end' => '61193671200',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61185200400'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61200496800',
    'utc_start' => '61193671200',
    'local_end' => '61200500400',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61193674800'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61278426000',
    'utc_start' => '61200496800',
    'local_end' => '61278429600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '61200500400'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61291126800',
    'utc_start' => '61278426000',
    'local_end' => '61291130400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '61278429600'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61307452800',
    'utc_start' => '61291126800',
    'local_end' => '61307460000',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '61291134000'
  },
  {
    'short_name' => 'WET',
    'utc_end' => '61323181200',
    'utc_start' => '61307452800',
    'local_end' => '61323184800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '61307456400'
  },
  {
    'short_name' => 'WEST',
    'utc_end' => '61337696400',
    'utc_start' => '61323181200',
    'local_end' => '61337703600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '61323188400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '61354630800',
    'utc_start' => '61337696400',
    'local_end' => '61354634400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '61337700000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '61369056000',
    'utc_start' => '61354630800',
    'local_end' => '61369063200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '61354638000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '61390227600',
    'utc_start' => '61369056000',
    'local_end' => '61390231200',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '61369059600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '61402406400',
    'utc_start' => '61390227600',
    'local_end' => '61402413600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '61390234800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62356604400',
    'utc_start' => '61402406400',
    'local_end' => '62356608000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '61402410000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62364556800',
    'utc_start' => '62356604400',
    'local_end' => '62364560400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62356608000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62396002800',
    'utc_start' => '62364556800',
    'local_end' => '62396010000',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62364564000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62427452400',
    'utc_start' => '62396002800',
    'local_end' => '62427459600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62396010000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62443177200',
    'utc_start' => '62427452400',
    'local_end' => '62443184400',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62427459600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62474630400',
    'utc_start' => '62443177200',
    'local_end' => '62474634000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62443180800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62490355200',
    'utc_start' => '62474630400',
    'local_end' => '62490358800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62474634000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62506076400',
    'utc_start' => '62490355200',
    'local_end' => '62506083600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62490362400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62521804800',
    'utc_start' => '62506076400',
    'local_end' => '62521808400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62506080000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62537526000',
    'utc_start' => '62521804800',
    'local_end' => '62537533200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62521812000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62553254400',
    'utc_start' => '62537526000',
    'local_end' => '62553258000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62537529600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62568975600',
    'utc_start' => '62553254400',
    'local_end' => '62568982800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62553261600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62584704000',
    'utc_start' => '62568975600',
    'local_end' => '62584707600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62568979200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62601030000',
    'utc_start' => '62584704000',
    'local_end' => '62601037200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62584711200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62616758400',
    'utc_start' => '62601030000',
    'local_end' => '62616762000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62601033600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62632479600',
    'utc_start' => '62616758400',
    'local_end' => '62632486800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62616765600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62648208000',
    'utc_start' => '62632479600',
    'local_end' => '62648211600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62632483200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62663929200',
    'utc_start' => '62648208000',
    'local_end' => '62663936400',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62648215200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62679657600',
    'utc_start' => '62663929200',
    'local_end' => '62679661200',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62663932800'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62695378800',
    'utc_start' => '62679657600',
    'local_end' => '62695386000',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62679664800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62711107200',
    'utc_start' => '62695378800',
    'local_end' => '62711110800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62695382400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62726828400',
    'utc_start' => '62711107200',
    'local_end' => '62726835600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62711114400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62742556800',
    'utc_start' => '62726828400',
    'local_end' => '62742560400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62726832000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62758278000',
    'utc_start' => '62742556800',
    'local_end' => '62758285200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62742564000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62774006400',
    'utc_start' => '62758278000',
    'local_end' => '62774010000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62758281600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62790332400',
    'utc_start' => '62774006400',
    'local_end' => '62790339600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62774013600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62806060800',
    'utc_start' => '62790332400',
    'local_end' => '62806064400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62790336000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62821782000',
    'utc_start' => '62806060800',
    'local_end' => '62821789200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62806068000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62837510400',
    'utc_start' => '62821782000',
    'local_end' => '62837514000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62821785600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62853231600',
    'utc_start' => '62837510400',
    'local_end' => '62853238800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62837517600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62868960000',
    'utc_start' => '62853231600',
    'local_end' => '62868963600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62853235200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62884681200',
    'utc_start' => '62868960000',
    'local_end' => '62884688400',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62868967200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62900409600',
    'utc_start' => '62884681200',
    'local_end' => '62900413200',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62884684800'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62916130800',
    'utc_start' => '62900409600',
    'local_end' => '62916138000',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62900416800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62931859200',
    'utc_start' => '62916130800',
    'local_end' => '62931862800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62916134400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62963910000',
    'utc_start' => '62931859200',
    'local_end' => '62963917200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62931866400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62982054000',
    'utc_start' => '62963910000',
    'local_end' => '62982061200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62963917200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62995363200',
    'utc_start' => '62982054000',
    'local_end' => '62995366800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '62982057600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63013503600',
    'utc_start' => '62995363200',
    'local_end' => '63013510800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '62995370400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63026812800',
    'utc_start' => '63013503600',
    'local_end' => '63026816400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63013507200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63044953200',
    'utc_start' => '63026812800',
    'local_end' => '63044960400',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63026820000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63058262400',
    'utc_start' => '63044953200',
    'local_end' => '63058266000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63044956800'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63077007600',
    'utc_start' => '63058262400',
    'local_end' => '63077014800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63058269600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63089712000',
    'utc_start' => '63077007600',
    'local_end' => '63089715600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63077011200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63108457200',
    'utc_start' => '63089712000',
    'local_end' => '63108464400',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63089719200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63121161600',
    'utc_start' => '63108457200',
    'local_end' => '63121165200',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63108460800'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63139906800',
    'utc_start' => '63121161600',
    'local_end' => '63139914000',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63121168800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63153216000',
    'utc_start' => '63139906800',
    'local_end' => '63153219600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63139910400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63171356400',
    'utc_start' => '63153216000',
    'local_end' => '63171363600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63153223200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63184665600',
    'utc_start' => '63171356400',
    'local_end' => '63184669200',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63171360000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63202806000',
    'utc_start' => '63184665600',
    'local_end' => '63202813200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63184672800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63216115200',
    'utc_start' => '63202806000',
    'local_end' => '63216118800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63202809600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63234860400',
    'utc_start' => '63216115200',
    'local_end' => '63234867600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63216122400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63247564800',
    'utc_start' => '63234860400',
    'local_end' => '63247568400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63234864000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63266310000',
    'utc_start' => '63247564800',
    'local_end' => '63266317200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63247572000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63279014400',
    'utc_start' => '63266310000',
    'local_end' => '63279018000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63266313600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63297759600',
    'utc_start' => '63279014400',
    'local_end' => '63297766800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63279021600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63310464000',
    'utc_start' => '63297759600',
    'local_end' => '63310467600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63297763200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63329209200',
    'utc_start' => '63310464000',
    'local_end' => '63329216400',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63310471200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63342518400',
    'utc_start' => '63329209200',
    'local_end' => '63342522000',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63329212800'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63360658800',
    'utc_start' => '63342518400',
    'local_end' => '63360666000',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63342525600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63373968000',
    'utc_start' => '63360658800',
    'local_end' => '63373971600',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63360662400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63392108400',
    'utc_start' => '63373968000',
    'local_end' => '63392115600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63373975200'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63405417600',
    'utc_start' => '63392108400',
    'local_end' => '63405421200',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63392112000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63424162800',
    'utc_start' => '63405417600',
    'local_end' => '63424170000',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63405424800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63436867200',
    'utc_start' => '63424162800',
    'local_end' => '63436870800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63424166400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63455612400',
    'utc_start' => '63436867200',
    'local_end' => '63455619600',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63436874400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63468316800',
    'utc_start' => '63455612400',
    'local_end' => '63468320400',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63455616000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63487062000',
    'utc_start' => '63468316800',
    'local_end' => '63487069200',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63468324000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '63500371200',
    'utc_start' => '63487062000',
    'local_end' => '63500374800',
    'is_dst' => 0,
    'offset' => 3600,
    'local_start' => '63487065600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63518511600',
    'utc_start' => '63500371200',
    'local_end' => '63518518800',
    'is_dst' => 1,
    'offset' => 7200,
    'local_start' => '63500378400'
  }
]
;

my $max_year = 2013;

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}

my $rules = [
  bless( {
    'letter' => '',
    'on' => 'lastSun',
    'save' => '0',
    'to' => 'max',
    'from' => '1996',
    'in' => 'Oct',
    'at' => '1:00u',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => '',
    'on' => 'lastSun',
    'save' => '0',
    'to' => 'max',
    'from' => '1996',
    'in' => 'Oct',
    'at' => '2:00s',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'S',
    'on' => 'lastSun',
    'save' => '1:00',
    'to' => 'max',
    'from' => '1981',
    'in' => 'Mar',
    'at' => '2:00s',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'S',
    'on' => 'lastSun',
    'save' => '1:00',
    'to' => 'max',
    'from' => '1981',
    'in' => 'Mar',
    'at' => '1:00u',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' )
]
;
my $last_observance = bless( {
  'until' => undef,
  'format' => 'CE%sT',
  'gmtoff' => '1:00',
  'rules' => 'EU',
  'offset' => 3600,
  'start' => bless( {
    'local_rd_secs' => 0,
    'local_rd_days' => 721720,
    'language' => bless( {
      'month_numbers' => {},
      'am_pm' => [
        'AM',
        'PM'
      ],
      'ordinal_suffixes' => [],
      'month_abbreviations' => [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec'
      ],
      'day_abbreviations' => [
        'Mon',
        'Tue',
        'Wed',
        'Thu',
        'Fri',
        'Sat',
        'Sun'
      ],
      'month_names' => [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December'
      ],
      'day_numbers' => {},
      'day_names' => [
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday',
        'Sunday'
      ]
    }, 'DateTime::Language::English' ),
    'rd_nanosecs' => 0,
    'tz' => bless( {}, 'DateTime::TimeZone::UTC' ),
    'local_c' => {
      'hour' => 0,
      'second' => 0,
      'month' => 1,
      'quarter' => 1,
      'day_of_year' => 1,
      'day_of_quarter' => 1,
      'minute' => 0,
      'day' => 1,
      'day_of_week' => 6,
      'year' => 1977
    },
    'utc_rd_secs' => 0,
    'utc_rd_days' => 721720
  }, 'DateTime' )
}, 'DateTime::TimeZone::OlsonDB::Observance' )
;

sub _generate_spans_until_match
{
    my $self = shift;
    my $dt = shift;

    my $generate_until_year = $dt->utc_year + 1;

    my @changes;
    foreach my $rule (@$rules)
    {
        foreach my $year ( $max_year .. $generate_until_year )
        {
            my $next = $rule->date_for_year( $year, 3600 );

            # don't bother with changes we've seen already
            next if $next->{utc}->utc_rd_as_seconds < $self->{max_span}{utc_end};

            push @changes,
                DateTime::TimeZone::OlsonDB::Change->new
                    ( start_date => $next->{local},
                      short_name =>
                      sprintf( $last_observance->format, $rule->letter ),
                      observance => $last_observance,
                      rule       => $rule,
                    );
        }
    }

    $max_year = $generate_until_year;
    my @sorted = sort { $a->start_date <=> $b->start_date } @changes;

    my $seconds = $dt->utc_rd_as_seconds;
    my $match;

    for ( my $x = 1; $x < @sorted; $x++ )
    {
        my $last_offset =
            $x == 1 ? $self->{max_span}{offset} : $changes[ $x - 2 ]->offset;

        my $span =
            DateTime::TimeZone::OlsonDB::Change::two_changes_as_span
                ( @sorted[ $x - 1, $x ], $last_offset );

        push @{ $self->{spans} }, $span;

        $match = $span
            if $seconds >= $span->{utc_start} && $seconds < $span->{utc_end};
    }

    return $match;
}


1;

