# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.06) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from ../../data/tz/Olson/europe.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::Europe::Riga;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::Europe::Riga::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
    [
DateTime::TimeZone::NEG_INFINITY,
59295536616,
DateTime::TimeZone::NEG_INFINITY,
59295542400,
5784,
0,
'LMT'
    ],
    [
59295536616,
60503675016,
59295542400,
60503680800,
5784,
0,
'RMT'
    ],
    [
60503675016,
60516980616,
60503684400,
60516990000,
9384,
0,
'LST'
    ],
    [
60516980616,
60534001416,
60516986400,
60534007200,
5784,
0,
'RMT'
    ],
    [
60534001416,
60538407816,
60534010800,
60538417200,
9384,
0,
'LST'
    ],
    [
60538407816,
60758375016,
60538413600,
60758380800,
5784,
0,
'RMT'
    ],
    [
60758375016,
61207653600,
60758382216,
61207660800,
7200,
0,
'EET'
    ],
    [
61207653600,
61236162000,
61207664400,
61236172800,
10800,
0,
'MSK'
    ],
    [
61236162000,
61278426000,
61236165600,
61278429600,
3600,
0,
'CET'
    ],
    [
61278426000,
61291126800,
61278429600,
61291130400,
3600,
0,
'CET'
    ],
    [
61291126800,
61307452800,
61291134000,
61307460000,
7200,
1,
'CEST'
    ],
    [
61307452800,
61323181200,
61307456400,
61323184800,
3600,
0,
'CET'
    ],
    [
61323181200,
61338902400,
61323188400,
61338909600,
7200,
1,
'CEST'
    ],
    [
61338902400,
61339849200,
61338906000,
61339852800,
3600,
0,
'CET'
    ],
    [
61339849200,
62490603600,
61339860000,
62490614400,
10800,
0,
'MSK/MSD'
    ],
    [
62490603600,
62506411200,
62490618000,
62506425600,
14400,
1,
'MSK/MSD'
    ],
    [
62506411200,
62522139600,
62506422000,
62522150400,
10800,
0,
'MSK/MSD'
    ],
    [
62522139600,
62537947200,
62522154000,
62537961600,
14400,
1,
'MSK/MSD'
    ],
    [
62537947200,
62553675600,
62537958000,
62553686400,
10800,
0,
'MSK/MSD'
    ],
    [
62553675600,
62569483200,
62553690000,
62569497600,
14400,
1,
'MSK/MSD'
    ],
    [
62569483200,
62585298000,
62569494000,
62585308800,
10800,
0,
'MSK/MSD'
    ],
    [
62585298000,
62601026400,
62585312400,
62601040800,
14400,
1,
'MSK/MSD'
    ],
    [
62601026400,
62616754800,
62601037200,
62616765600,
10800,
0,
'MSK/MSD'
    ],
    [
62616754800,
62632476000,
62616769200,
62632490400,
14400,
1,
'MSK/MSD'
    ],
    [
62632476000,
62648204400,
62632486800,
62648215200,
10800,
0,
'MSK/MSD'
    ],
    [
62648204400,
62663925600,
62648218800,
62663940000,
14400,
1,
'MSK/MSD'
    ],
    [
62663925600,
62679654000,
62663936400,
62679664800,
10800,
0,
'MSK/MSD'
    ],
    [
62679654000,
62695375200,
62679668400,
62695389600,
14400,
1,
'MSK/MSD'
    ],
    [
62695375200,
62711103600,
62695386000,
62711114400,
10800,
0,
'MSK/MSD'
    ],
    [
62711103600,
62726824800,
62711118000,
62726839200,
14400,
1,
'MSK/MSD'
    ],
    [
62726824800,
62742553200,
62726835600,
62742564000,
10800,
0,
'MSK/MSD'
    ],
    [
62742553200,
62758278000,
62742564000,
62758288800,
10800,
0,
'EEST'
    ],
    [
62758278000,
62774006400,
62758285200,
62774013600,
7200,
0,
'EET'
    ],
    [
62774006400,
62790332400,
62774017200,
62790343200,
10800,
1,
'EEST'
    ],
    [
62790332400,
62806060800,
62790339600,
62806068000,
7200,
0,
'EET'
    ],
    [
62806060800,
62821782000,
62806071600,
62821792800,
10800,
1,
'EEST'
    ],
    [
62821782000,
62837510400,
62821789200,
62837517600,
7200,
0,
'EET'
    ],
    [
62837510400,
62853231600,
62837521200,
62853242400,
10800,
1,
'EEST'
    ],
    [
62853231600,
62868960000,
62853238800,
62868967200,
7200,
0,
'EET'
    ],
    [
62868960000,
62884681200,
62868970800,
62884692000,
10800,
1,
'EEST'
    ],
    [
62884681200,
62900409600,
62884688400,
62900416800,
7200,
0,
'EET'
    ],
    [
62900409600,
62916130800,
62900420400,
62916141600,
10800,
1,
'EEST'
    ],
    [
62916130800,
62931859200,
62916138000,
62931866400,
7200,
0,
'EET'
    ],
    [
62931859200,
62947580400,
62931870000,
62947591200,
10800,
1,
'EEST'
    ],
    [
62947580400,
62963913600,
62947587600,
62963920800,
7200,
0,
'EET'
    ],
    [
62963913600,
62979634800,
62963924400,
62979645600,
10800,
1,
'EEST'
    ],
    [
62979634800,
62989480800,
62979642000,
62989488000,
7200,
0,
'EET'
    ],
    [
62989480800,
62995359600,
62989488000,
62995366800,
7200,
0,
'EET'
    ],
    [
62995359600,
63013500000,
62995370400,
63013510800,
10800,
1,
'EEST'
    ],
    [
63013500000,
63026809200,
63013507200,
63026816400,
7200,
0,
'EET'
    ],
    [
63026809200,
63044949600,
63026820000,
63044960400,
10800,
1,
'EEST'
    ],
    [
63044949600,
63058258800,
63044956800,
63058266000,
7200,
0,
'EET'
    ],
    [
63058258800,
63077004000,
63058269600,
63077014800,
10800,
1,
'EEST'
    ],
    [
63077004000,
63087458400,
63077011200,
63087465600,
7200,
0,
'EET'
    ],
    [
63087458400,
63113983200,
63087465600,
63113990400,
7200,
0,
'EET'
    ],
    [
63113983200,
63121158000,
63113990400,
63121165200,
7200,
0,
'EET'
    ],
    [
63121158000,
63139903200,
63121168800,
63139914000,
10800,
1,
'EEST'
    ],
    [
63139903200,
63153212400,
63139910400,
63153219600,
7200,
0,
'EET'
    ],
    [
63153212400,
63171352800,
63153223200,
63171363600,
10800,
1,
'EEST'
    ],
    [
63171352800,
63184662000,
63171360000,
63184669200,
7200,
0,
'EET'
    ],
    [
63184662000,
63202802400,
63184672800,
63202813200,
10800,
1,
'EEST'
    ],
    [
63202802400,
63216111600,
63202809600,
63216118800,
7200,
0,
'EET'
    ],
    [
63216111600,
63234856800,
63216122400,
63234867600,
10800,
1,
'EEST'
    ],
    [
63234856800,
63247561200,
63234864000,
63247568400,
7200,
0,
'EET'
    ],
    [
63247561200,
63266306400,
63247572000,
63266317200,
10800,
1,
'EEST'
    ],
    [
63266306400,
63279010800,
63266313600,
63279018000,
7200,
0,
'EET'
    ],
    [
63279010800,
63297756000,
63279021600,
63297766800,
10800,
1,
'EEST'
    ],
    [
63297756000,
63310460400,
63297763200,
63310467600,
7200,
0,
'EET'
    ],
    [
63310460400,
63329205600,
63310471200,
63329216400,
10800,
1,
'EEST'
    ],
    [
63329205600,
63342514800,
63329212800,
63342522000,
7200,
0,
'EET'
    ],
    [
63342514800,
63360655200,
63342525600,
63360666000,
10800,
1,
'EEST'
    ],
    [
63360655200,
63373964400,
63360662400,
63373971600,
7200,
0,
'EET'
    ],
    [
63373964400,
63392104800,
63373975200,
63392115600,
10800,
1,
'EEST'
    ],
    [
63392104800,
63405414000,
63392112000,
63405421200,
7200,
0,
'EET'
    ],
    [
63405414000,
63424159200,
63405424800,
63424170000,
10800,
1,
'EEST'
    ],
    [
63424159200,
63436863600,
63424166400,
63436870800,
7200,
0,
'EET'
    ],
    [
63436863600,
63455608800,
63436874400,
63455619600,
10800,
1,
'EEST'
    ],
    [
63455608800,
63468313200,
63455616000,
63468320400,
7200,
0,
'EET'
    ],
    [
63468313200,
63487058400,
63468324000,
63487069200,
10800,
1,
'EEST'
    ],
    [
63487058400,
63500367600,
63487065600,
63500374800,
7200,
0,
'EET'
    ],
    [
63500367600,
63518508000,
63500378400,
63518518800,
10800,
1,
'EEST'
    ],
];

sub _max_year { 2013 }

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}

sub _last_offset { 7200 }

my $last_observance = bless( {
  'until' => undef,
  'format' => 'EE%sT',
  'gmtoff' => '2:00',
  'rules' => 'EU',
  'offset' => 7200,
  'start' => bless( {
    'local_rd_secs' => 0,
    'local_rd_days' => 730486,
    'utc_year' => 2002,
    'rd_nanosecs' => 0,
    'tz' => bless( {}, 'DateTime::TimeZone::UTC' ),
    'local_c' => {
      'hour' => 0,
      'second' => 0,
      'month' => 1,
      'quarter' => 1,
      'day_of_year' => 1,
      'day_of_quarter' => 1,
      'minute' => 0,
      'day' => 1,
      'day_of_week' => 1,
      'year' => 2001
    },
    'utc_rd_secs' => 0,
    'utc_rd_days' => 730486
  }, 'DateTime' )
}, 'DateTime::TimeZone::OlsonDB::Observance' )
;
sub _last_observance { $last_observance }

my $rules = [
  bless( {
    'letter' => 'S',
    'on' => 'lastSun',
    'save' => '1:00',
    'to' => 'max',
    'from' => '1981',
    'in' => 'Mar',
    'at' => '1:00u',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => '',
    'on' => 'lastSun',
    'save' => '0',
    'to' => 'max',
    'from' => '1996',
    'in' => 'Oct',
    'at' => '1:00u',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' )
]
;
sub _rules { $rules }


1;

