# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.03) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from ../../data/tz/Olson/australasia.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::Pacific::Rarotonga;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::Pacific::Rarotonga::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
  {
    'short_name' => 'LMT',
    'utc_end' => '59958268744',
    'utc_start' => DateTime::TimeZone::NEG_INFINITY,
    'local_end' => '59958230400',
    'is_dst' => 0,
    'offset' => -38344,
    'local_start' => DateTime::TimeZone::NEG_INFINITY
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62415397800',
    'utc_start' => '59958268744',
    'local_end' => '62415360000',
    'is_dst' => 0,
    'offset' => -37800,
    'local_start' => '59958230944'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62425072800',
    'utc_start' => '62415397800',
    'local_end' => '62425036800',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62415361800'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62445636000',
    'utc_start' => '62425072800',
    'local_end' => '62445600000',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62425036800'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62456520600',
    'utc_start' => '62445636000',
    'local_end' => '62456486400',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62445601800'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62477085600',
    'utc_start' => '62456520600',
    'local_end' => '62477049600',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62456484600'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62487970200',
    'utc_start' => '62477085600',
    'local_end' => '62487936000',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62477051400'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62508535200',
    'utc_start' => '62487970200',
    'local_end' => '62508499200',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62487934200'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62520024600',
    'utc_start' => '62508535200',
    'local_end' => '62519990400',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62508501000'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62540589600',
    'utc_start' => '62520024600',
    'local_end' => '62540553600',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62519988600'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62551474200',
    'utc_start' => '62540589600',
    'local_end' => '62551440000',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62540555400'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62572039200',
    'utc_start' => '62551474200',
    'local_end' => '62572003200',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62551438200'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62582923800',
    'utc_start' => '62572039200',
    'local_end' => '62582889600',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62572005000'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62603488800',
    'utc_start' => '62582923800',
    'local_end' => '62603452800',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62582887800'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62614373400',
    'utc_start' => '62603488800',
    'local_end' => '62614339200',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62603454600'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62634938400',
    'utc_start' => '62614373400',
    'local_end' => '62634902400',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62614337400'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62645823000',
    'utc_start' => '62634938400',
    'local_end' => '62645788800',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62634904200'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62666388000',
    'utc_start' => '62645823000',
    'local_end' => '62666352000',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62645787000'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62677272600',
    'utc_start' => '62666388000',
    'local_end' => '62677238400',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62666353800'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62697837600',
    'utc_start' => '62677272600',
    'local_end' => '62697801600',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62677236600'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62709327000',
    'utc_start' => '62697837600',
    'local_end' => '62709292800',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62697803400'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62729892000',
    'utc_start' => '62709327000',
    'local_end' => '62729856000',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62709291000'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62740776600',
    'utc_start' => '62729892000',
    'local_end' => '62740742400',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62729857800'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => '62761341600',
    'utc_start' => '62740776600',
    'local_end' => '62761305600',
    'is_dst' => 0,
    'offset' => -36000,
    'local_start' => '62740740600'
  },
  {
    'short_name' => 'CKHST',
    'utc_end' => '62772226200',
    'utc_start' => '62761341600',
    'local_end' => '62772192000',
    'is_dst' => 1,
    'offset' => -34200,
    'local_start' => '62761307400'
  },
  {
    'short_name' => 'CKT',
    'utc_end' => DateTime::TimeZone::INFINITY,
    'utc_start' => '62772226200',
    'local_end' => DateTime::TimeZone::INFINITY,
    'offset' => -36000,
    'local_start' => '62772262200'
  }
]
;

my $max_year = 2013;

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}



1;

