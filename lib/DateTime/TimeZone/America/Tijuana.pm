# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.03) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from ../../data/tz/Olson/northamerica.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::America::Tijuana;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::America::Tijuana::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
  {
    'short_name' => 'LMT',
    'utc_end' => '60620947200',
    'utc_start' => DateTime::TimeZone::NEG_INFINITY,
    'local_end' => '60620919116',
    'is_dst' => 0,
    'offset' => -28084,
    'local_start' => DateTime::TimeZone::NEG_INFINITY
  },
  {
    'short_name' => 'MST',
    'utc_end' => '60684015600',
    'utc_start' => '60620947200',
    'local_end' => '60683990400',
    'is_dst' => 0,
    'offset' => -25200,
    'local_start' => '60620922000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '60792620400',
    'utc_start' => '60684015600',
    'local_end' => '60792591600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '60683986800'
  },
  {
    'short_name' => 'MST',
    'utc_end' => '60900879600',
    'utc_start' => '60792620400',
    'local_end' => '60900854400',
    'is_dst' => 0,
    'offset' => -25200,
    'local_start' => '60792595200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '60912720000',
    'utc_start' => '60900879600',
    'local_end' => '60912691200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '60900850800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '60928441200',
    'utc_start' => '60912720000',
    'local_end' => '60928416000',
    'is_dst' => 0,
    'offset' => -25200,
    'local_start' => '60912694800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61261862400',
    'utc_start' => '60928441200',
    'local_end' => '61261833600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '60928412400'
  },
  {
    'short_name' => 'PWT',
    'utc_end' => '61374006000',
    'utc_start' => '61261862400',
    'local_end' => '61373980800',
    'is_dst' => 0,
    'offset' => -25200,
    'local_start' => '61261837200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61449609600',
    'utc_start' => '61374006000',
    'local_end' => '61449580800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61373977200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61474143600',
    'utc_start' => '61449609600',
    'local_end' => '61474118400',
    'is_dst' => 0,
    'offset' => -25200,
    'local_start' => '61449584400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61630790400',
    'utc_start' => '61474143600',
    'local_end' => '61630761600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61474114800'
  },
  {
    'short_name' => 'PT',
    'utc_end' => '61640647200',
    'utc_start' => '61630790400',
    'local_end' => '61640618400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61630761600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61653949200',
    'utc_start' => '61640647200',
    'local_end' => '61653924000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '61640622000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61672096800',
    'utc_start' => '61653949200',
    'local_end' => '61672068000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61653920400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61685398800',
    'utc_start' => '61672096800',
    'local_end' => '61685373600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '61672071600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61704151200',
    'utc_start' => '61685398800',
    'local_end' => '61704122400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61685370000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61717453200',
    'utc_start' => '61704151200',
    'local_end' => '61717428000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '61704126000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61735600800',
    'utc_start' => '61717453200',
    'local_end' => '61735572000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61717424400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61748902800',
    'utc_start' => '61735600800',
    'local_end' => '61748877600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '61735575600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61767050400',
    'utc_start' => '61748902800',
    'local_end' => '61767021600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61748874000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61780352400',
    'utc_start' => '61767050400',
    'local_end' => '61780327200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '61767025200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61798500000',
    'utc_start' => '61780352400',
    'local_end' => '61798471200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61780323600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61811802000',
    'utc_start' => '61798500000',
    'local_end' => '61811776800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '61798474800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61829949600',
    'utc_start' => '61811802000',
    'local_end' => '61829920800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61811773200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '61843251600',
    'utc_start' => '61829949600',
    'local_end' => '61843226400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '61829924400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '61851715200',
    'utc_start' => '61843251600',
    'local_end' => '61851686400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61843222800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62325014400',
    'utc_start' => '61851715200',
    'local_end' => '62324985600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '61851686400'
  },
  {
    'short_name' => 'PT',
    'utc_end' => '62334957600',
    'utc_start' => '62325014400',
    'local_end' => '62334928800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62324985600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62351283600',
    'utc_start' => '62334957600',
    'local_end' => '62351258400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62334932400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62366407200',
    'utc_start' => '62351283600',
    'local_end' => '62366378400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62351254800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62382733200',
    'utc_start' => '62366407200',
    'local_end' => '62382708000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62366382000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62398461600',
    'utc_start' => '62382733200',
    'local_end' => '62398432800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62382704400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62414182800',
    'utc_start' => '62398461600',
    'local_end' => '62414157600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62398436400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62429911200',
    'utc_start' => '62414182800',
    'local_end' => '62429882400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62414154000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62445632400',
    'utc_start' => '62429911200',
    'local_end' => '62445607200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62429886000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62461360800',
    'utc_start' => '62445632400',
    'local_end' => '62461332000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62445603600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62477082000',
    'utc_start' => '62461360800',
    'local_end' => '62477056800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62461335600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62492810400',
    'utc_start' => '62477082000',
    'local_end' => '62492781600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62477053200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62508531600',
    'utc_start' => '62492810400',
    'local_end' => '62508506400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62492785200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62524260000',
    'utc_start' => '62508531600',
    'local_end' => '62524231200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62508502800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62540586000',
    'utc_start' => '62524260000',
    'local_end' => '62540560800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62524234800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62555709600',
    'utc_start' => '62540586000',
    'local_end' => '62555680800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62540557200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62572035600',
    'utc_start' => '62555709600',
    'local_end' => '62572010400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62555684400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62587764000',
    'utc_start' => '62572035600',
    'local_end' => '62587735200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62572006800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62603485200',
    'utc_start' => '62587764000',
    'local_end' => '62603460000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62587738800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62619213600',
    'utc_start' => '62603485200',
    'local_end' => '62619184800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62603456400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62634934800',
    'utc_start' => '62619213600',
    'local_end' => '62634909600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62619188400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62650663200',
    'utc_start' => '62634934800',
    'local_end' => '62650634400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62634906000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62666384400',
    'utc_start' => '62650663200',
    'local_end' => '62666359200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62650638000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62680298400',
    'utc_start' => '62666384400',
    'local_end' => '62680269600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62666355600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62697834000',
    'utc_start' => '62680298400',
    'local_end' => '62697808800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62680273200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62711748000',
    'utc_start' => '62697834000',
    'local_end' => '62711719200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62697805200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62729888400',
    'utc_start' => '62711748000',
    'local_end' => '62729863200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62711722800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62743197600',
    'utc_start' => '62729888400',
    'local_end' => '62743168800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62729859600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62761338000',
    'utc_start' => '62743197600',
    'local_end' => '62761312800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62743172400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62774647200',
    'utc_start' => '62761338000',
    'local_end' => '62774618400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62761309200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62792787600',
    'utc_start' => '62774647200',
    'local_end' => '62792762400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62774622000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62806701600',
    'utc_start' => '62792787600',
    'local_end' => '62806672800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62792758800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62824237200',
    'utc_start' => '62806701600',
    'local_end' => '62824212000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62806676400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62838151200',
    'utc_start' => '62824237200',
    'local_end' => '62838122400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62824208400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62855686800',
    'utc_start' => '62838151200',
    'local_end' => '62855661600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62838126000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62869600800',
    'utc_start' => '62855686800',
    'local_end' => '62869572000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62855658000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62887741200',
    'utc_start' => '62869600800',
    'local_end' => '62887716000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62869575600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62901050400',
    'utc_start' => '62887741200',
    'local_end' => '62901021600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62887712400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62919190800',
    'utc_start' => '62901050400',
    'local_end' => '62919165600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62901025200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62932500000',
    'utc_start' => '62919190800',
    'local_end' => '62932471200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62919162000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62950640400',
    'utc_start' => '62932500000',
    'local_end' => '62950615200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62932474800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62956166400',
    'utc_start' => '62950640400',
    'local_end' => '62956137600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62950611600'
  },
  {
    'short_name' => 'PT',
    'utc_end' => '62964554400',
    'utc_start' => '62956166400',
    'local_end' => '62964525600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62956137600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '62982090000',
    'utc_start' => '62964554400',
    'local_end' => '62982064800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62964529200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '62996004000',
    'utc_start' => '62982090000',
    'local_end' => '62995975200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '62982061200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63013539600',
    'utc_start' => '62996004000',
    'local_end' => '63013514400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '62995978800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63027453600',
    'utc_start' => '63013539600',
    'local_end' => '63027424800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63013510800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63044989200',
    'utc_start' => '63027453600',
    'local_end' => '63044964000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63027428400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63058903200',
    'utc_start' => '63044989200',
    'local_end' => '63058874400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63044960400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63077043600',
    'utc_start' => '63058903200',
    'local_end' => '63077018400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63058878000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63090352800',
    'utc_start' => '63077043600',
    'local_end' => '63090324000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63077014800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63108493200',
    'utc_start' => '63090352800',
    'local_end' => '63108468000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63090327600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63114019200',
    'utc_start' => '63108493200',
    'local_end' => '63113990400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63108464400'
  },
  {
    'short_name' => 'PT',
    'utc_end' => '63121802400',
    'utc_start' => '63114019200',
    'local_end' => '63121773600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63113990400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63139942800',
    'utc_start' => '63121802400',
    'local_end' => '63139917600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63121777200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63149875200',
    'utc_start' => '63139942800',
    'local_end' => '63149846400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63139914000'
  },
  {
    'short_name' => 'PT',
    'utc_end' => '63153856800',
    'utc_start' => '63149875200',
    'local_end' => '63153828000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63149846400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63171392400',
    'utc_start' => '63153856800',
    'local_end' => '63171367200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63153831600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63185306400',
    'utc_start' => '63171392400',
    'local_end' => '63185277600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63171363600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63202842000',
    'utc_start' => '63185306400',
    'local_end' => '63202816800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63185281200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63216756000',
    'utc_start' => '63202842000',
    'local_end' => '63216727200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63202813200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63234896400',
    'utc_start' => '63216756000',
    'local_end' => '63234871200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63216730800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63248205600',
    'utc_start' => '63234896400',
    'local_end' => '63248176800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63234867600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63266346000',
    'utc_start' => '63248205600',
    'local_end' => '63266320800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63248180400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63279655200',
    'utc_start' => '63266346000',
    'local_end' => '63279626400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63266317200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63297795600',
    'utc_start' => '63279655200',
    'local_end' => '63297770400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63279630000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63311104800',
    'utc_start' => '63297795600',
    'local_end' => '63311076000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63297766800'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63329245200',
    'utc_start' => '63311104800',
    'local_end' => '63329220000',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63311079600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63343159200',
    'utc_start' => '63329245200',
    'local_end' => '63343130400',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63329216400'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63360694800',
    'utc_start' => '63343159200',
    'local_end' => '63360669600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63343134000'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63374608800',
    'utc_start' => '63360694800',
    'local_end' => '63374580000',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63360666000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63392144400',
    'utc_start' => '63374608800',
    'local_end' => '63392119200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63374583600'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63406058400',
    'utc_start' => '63392144400',
    'local_end' => '63406029600',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63392115600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63424198800',
    'utc_start' => '63406058400',
    'local_end' => '63424173600',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63406033200'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63437508000',
    'utc_start' => '63424198800',
    'local_end' => '63437479200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63424170000'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63455648400',
    'utc_start' => '63437508000',
    'local_end' => '63455623200',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63437482800'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63468957600',
    'utc_start' => '63455648400',
    'local_end' => '63468928800',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63455619600'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63487098000',
    'utc_start' => '63468957600',
    'local_end' => '63487072800',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63468932400'
  },
  {
    'short_name' => 'PST',
    'utc_end' => '63501012000',
    'utc_start' => '63487098000',
    'local_end' => '63500983200',
    'is_dst' => 0,
    'offset' => -28800,
    'local_start' => '63487069200'
  },
  {
    'short_name' => 'PDT',
    'utc_end' => '63518547600',
    'utc_start' => '63501012000',
    'local_end' => '63518522400',
    'is_dst' => 1,
    'offset' => -25200,
    'local_start' => '63500986800'
  }
]
;

my $max_year = 2013;

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}

my $rules = [
  bless( {
    'letter' => 'S',
    'on' => 'lastSun',
    'save' => '0',
    'to' => 'max',
    'from' => '1967',
    'in' => 'Oct',
    'at' => '2:00',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'D',
    'on' => 'Sun>=1',
    'save' => '1:00',
    'to' => 'max',
    'from' => '2002',
    'in' => 'Apr',
    'at' => '2:00',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'D',
    'on' => 'Sun>=1',
    'save' => '1:00',
    'to' => 'max',
    'from' => '1987',
    'in' => 'Apr',
    'at' => '2:00',
    'type' => undef,
    'offset' => 3600
  }, 'DateTime::TimeZone::OlsonDB::Rule' ),
  bless( {
    'letter' => 'S',
    'on' => 'lastSun',
    'save' => '0',
    'to' => 'max',
    'from' => '2002',
    'in' => 'Oct',
    'at' => '2:00',
    'type' => undef,
    'offset' => 0
  }, 'DateTime::TimeZone::OlsonDB::Rule' )
]
;
my $last_observance = bless( {
  'until' => undef,
  'format' => 'P%sT',
  'gmtoff' => '-8:00',
  'rules' => 'Mexico',
  'offset' => -28800,
  'start' => bless( {
    'local_rd_secs' => 0,
    'local_rd_days' => 730901,
    'language' => bless( {
      'month_numbers' => {},
      'am_pm' => [
        'AM',
        'PM'
      ],
      'ordinal_suffixes' => [],
      'month_abbreviations' => [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec'
      ],
      'day_abbreviations' => [
        'Mon',
        'Tue',
        'Wed',
        'Thu',
        'Fri',
        'Sat',
        'Sun'
      ],
      'month_names' => [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December'
      ],
      'day_numbers' => {},
      'day_names' => [
        'Monday',
        'Tuesday',
        'Wednesday',
        'Thursday',
        'Friday',
        'Saturday',
        'Sunday'
      ]
    }, 'DateTime::Language::English' ),
    'rd_nanosecs' => 0,
    'tz' => bless( {}, 'DateTime::TimeZone::UTC' ),
    'local_c' => {
      'hour' => 0,
      'second' => 0,
      'month' => 2,
      'quarter' => 1,
      'day_of_year' => 51,
      'day_of_quarter' => 51,
      'minute' => 0,
      'day' => 20,
      'day_of_week' => 3,
      'year' => 2002
    },
    'utc_rd_secs' => 0,
    'utc_rd_days' => 730901
  }, 'DateTime' )
}, 'DateTime::TimeZone::OlsonDB::Observance' )
;

sub _generate_spans_until_match
{
    my $self = shift;
    my $dt = shift;

    my $generate_until_year = $dt->utc_year + 1;

    my @changes;
    foreach my $rule (@$rules)
    {
        foreach my $year ( $max_year .. $generate_until_year )
        {
            my $next = $rule->date_for_year( $year, -28800 );

            # don't bother with changes we've seen already
            next if $next->{utc}->utc_rd_as_seconds < $self->{max_span}{utc_end};

            push @changes,
                DateTime::TimeZone::OlsonDB::Change->new
                    ( start_date => $next->{local},
                      short_name =>
                      sprintf( $last_observance->format, $rule->letter ),
                      observance => $last_observance,
                      rule       => $rule,
                    );
        }
    }

    $max_year = $generate_until_year;
    my @sorted = sort { $a->start_date <=> $b->start_date } @changes;

    my $seconds = $dt->utc_rd_as_seconds;
    my $match;

    for ( my $x = 1; $x < @sorted; $x++ )
    {
        my $last_offset =
            $x == 1 ? $self->{max_span}{offset} : $changes[ $x - 2 ]->offset;

        my $span =
            DateTime::TimeZone::OlsonDB::Change::two_changes_as_span
                ( @sorted[ $x - 1, $x ], $last_offset );

        push @{ $self->{spans} }, $span;

        $match = $span
            if $seconds >= $span->{utc_start} && $seconds < $span->{utc_end};
    }

    return $match;
}


1;

