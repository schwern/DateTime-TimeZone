# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.01) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from Tripoli.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::Africa::Tripoli;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::Africa::Tripoli::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
  {
    'short_name' => 'LMT',
    'utc_end' => '60557756836',
    'utc_start' => $DateTime::TimeZone::NEG_INFINITY,
    'local_end' => '60557760000',
    'offset' => 3164,
    'local_start' => '-inf'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '61560781200',
    'utc_start' => '60557756836',
    'local_end' => '61560784800',
    'offset' => 3600,
    'local_start' => '60557760436'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '61567596000',
    'utc_start' => '61560781200',
    'local_end' => '61567603200',
    'offset' => 7200,
    'local_start' => '61560788400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '61623507600',
    'utc_start' => '61567596000',
    'local_end' => '61623511200',
    'offset' => 3600,
    'local_start' => '61567599600'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '61630754400',
    'utc_start' => '61623507600',
    'local_end' => '61630761600',
    'offset' => 7200,
    'local_start' => '61623514800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '61685794800',
    'utc_start' => '61630754400',
    'local_end' => '61685798400',
    'offset' => 3600,
    'local_start' => '61630758000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '61693826400',
    'utc_start' => '61685794800',
    'local_end' => '61693833600',
    'offset' => 7200,
    'local_start' => '61685802000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '61788524400',
    'utc_start' => '61693826400',
    'local_end' => '61788528000',
    'offset' => 3600,
    'local_start' => '61693830000'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '62514367200',
    'utc_start' => '61788524400',
    'local_end' => '62514374400',
    'offset' => 7200,
    'local_start' => '61788531600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62522146800',
    'utc_start' => '62514367200',
    'local_end' => '62522150400',
    'offset' => 3600,
    'local_start' => '62514370800'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62537954400',
    'utc_start' => '62522146800',
    'local_end' => '62537961600',
    'offset' => 7200,
    'local_start' => '62522154000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62553682800',
    'utc_start' => '62537954400',
    'local_end' => '62553686400',
    'offset' => 3600,
    'local_start' => '62537958000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62569490400',
    'utc_start' => '62553682800',
    'local_end' => '62569497600',
    'offset' => 7200,
    'local_start' => '62553690000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62585305200',
    'utc_start' => '62569490400',
    'local_end' => '62585308800',
    'offset' => 3600,
    'local_start' => '62569494000'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62601112800',
    'utc_start' => '62585305200',
    'local_end' => '62601120000',
    'offset' => 7200,
    'local_start' => '62585312400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62617273200',
    'utc_start' => '62601112800',
    'local_end' => '62617276800',
    'offset' => 3600,
    'local_start' => '62601116400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62632648800',
    'utc_start' => '62617273200',
    'local_end' => '62632656000',
    'offset' => 7200,
    'local_start' => '62617280400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62648636400',
    'utc_start' => '62632648800',
    'local_end' => '62648640000',
    'offset' => 3600,
    'local_start' => '62632652400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62664357600',
    'utc_start' => '62648636400',
    'local_end' => '62664364800',
    'offset' => 7200,
    'local_start' => '62648643600'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62679913200',
    'utc_start' => '62664357600',
    'local_end' => '62679916800',
    'offset' => 3600,
    'local_start' => '62664361200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62695720800',
    'utc_start' => '62679913200',
    'local_end' => '62695728000',
    'offset' => 7200,
    'local_start' => '62679920400'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62711535600',
    'utc_start' => '62695720800',
    'local_end' => '62711539200',
    'offset' => 3600,
    'local_start' => '62695724400'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62727343200',
    'utc_start' => '62711535600',
    'local_end' => '62727350400',
    'offset' => 7200,
    'local_start' => '62711542800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62743071600',
    'utc_start' => '62727343200',
    'local_end' => '62743075200',
    'offset' => 3600,
    'local_start' => '62727346800'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '62758879200',
    'utc_start' => '62743071600',
    'local_end' => '62758886400',
    'offset' => 7200,
    'local_start' => '62743078800'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62777458800',
    'utc_start' => '62758879200',
    'local_end' => '62777462400',
    'offset' => 3600,
    'local_start' => '62758882800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => '62979717600',
    'utc_start' => '62777458800',
    'local_end' => '62979724800',
    'offset' => 7200,
    'local_start' => '62777466000'
  },
  {
    'short_name' => 'CET',
    'utc_end' => '62995791600',
    'utc_start' => '62979717600',
    'local_end' => '62995795200',
    'offset' => 3600,
    'local_start' => '62979721200'
  },
  {
    'short_name' => 'CEST',
    'utc_end' => '63011599200',
    'utc_start' => '62995791600',
    'local_end' => '63011606400',
    'offset' => 7200,
    'local_start' => '62995798800'
  },
  {
    'short_name' => 'EET',
    'utc_end' => $DateTime::TimeZone::INFINITY,
    'utc_start' => '63011599200',
    'offset' => 7200
  }
]
;

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}



1;

