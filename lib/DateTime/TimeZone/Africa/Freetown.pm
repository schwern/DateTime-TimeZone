# This file is auto-generated by the Perl DateTime Suite time zone
# code generator (0.01) This code generator comes with the
# DateTime::TimeZone module distribution in the tools/ directory
#
# Generated from Freetown.
#
# Do not edit this file directly.
#
package DateTime::TimeZone::Africa::Freetown;

use strict;

use Class::Singleton;
use DateTime::TimeZone;
use DateTime::TimeZone::OlsonDB;

@DateTime::TimeZone::Africa::Freetown::ISA = ( 'Class::Singleton', 'DateTime::TimeZone' );

my $spans =
[
  {
    'short_name' => 'LMT',
    'utc_end' => '59358703980',
    'utc_start' => DateTime::TimeZone::NEG_INFINITY,
    'local_end' => '59358700800',
    'is_dst' => 0,
    'offset' => -3180,
    'local_start' => '-inf'
  },
  {
    'short_name' => 'FMT',
    'utc_end' => '60349971180',
    'utc_start' => '59358703980',
    'local_end' => '60349968000',
    'is_dst' => 0,
    'offset' => -3180,
    'local_start' => '59358700800'
  },
  {
    'short_name' => '',
    'utc_end' => '61044195600',
    'utc_start' => '60349971180',
    'local_end' => '61044192000',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '60349967580'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61054734000',
    'utc_start' => '61044195600',
    'local_end' => '61054732800',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61044194400'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61075818000',
    'utc_start' => '61054734000',
    'local_end' => '61075814400',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61054730400'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61086356400',
    'utc_start' => '61075818000',
    'local_end' => '61086355200',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61075816800'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61107354000',
    'utc_start' => '61086356400',
    'local_end' => '61107350400',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61086352800'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61117892400',
    'utc_start' => '61107354000',
    'local_end' => '61117891200',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61107352800'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61138890000',
    'utc_start' => '61117892400',
    'local_end' => '61138886400',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61117888800'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61149428400',
    'utc_start' => '61138890000',
    'local_end' => '61149427200',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61138888800'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61170426000',
    'utc_start' => '61149428400',
    'local_end' => '61170422400',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61149424800'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61180964400',
    'utc_start' => '61170426000',
    'local_end' => '61180963200',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61170424800'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61202048400',
    'utc_start' => '61180964400',
    'local_end' => '61202044800',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61180960800'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61212586800',
    'utc_start' => '61202048400',
    'local_end' => '61212585600',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61202047200'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61233584400',
    'utc_start' => '61212586800',
    'local_end' => '61233580800',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61212583200'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61244122800',
    'utc_start' => '61233584400',
    'local_end' => '61244121600',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61233583200'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61265120400',
    'utc_start' => '61244122800',
    'local_end' => '61265116800',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61244119200'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61275658800',
    'utc_start' => '61265120400',
    'local_end' => '61275657600',
    'is_dst' => 1,
    'offset' => -1200,
    'local_start' => '61265119200'
  },
  {
    'short_name' => 'WAT',
    'utc_end' => '61725459600',
    'utc_start' => '61275658800',
    'local_end' => '61725456000',
    'is_dst' => 0,
    'offset' => -3600,
    'local_start' => '61275655200'
  },
  {
    'short_name' => '',
    'utc_end' => '61738502400',
    'utc_start' => '61725459600',
    'local_end' => '61738502400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61725459600'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61746447600',
    'utc_start' => '61738502400',
    'local_end' => '61746451200',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61738506000'
  },
  {
    'short_name' => 'GMT',
    'utc_end' => '61770038400',
    'utc_start' => '61746447600',
    'local_end' => '61770038400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61746447600'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61777983600',
    'utc_start' => '61770038400',
    'local_end' => '61777987200',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61770042000'
  },
  {
    'short_name' => 'GMT',
    'utc_end' => '61801574400',
    'utc_start' => '61777983600',
    'local_end' => '61801574400',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61777983600'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61809519600',
    'utc_start' => '61801574400',
    'local_end' => '61809523200',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61801578000'
  },
  {
    'short_name' => 'GMT',
    'utc_end' => '61833196800',
    'utc_start' => '61809519600',
    'local_end' => '61833196800',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61809519600'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61841142000',
    'utc_start' => '61833196800',
    'local_end' => '61841145600',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61833200400'
  },
  {
    'short_name' => 'GMT',
    'utc_end' => '61864732800',
    'utc_start' => '61841142000',
    'local_end' => '61864732800',
    'is_dst' => 0,
    'offset' => 0,
    'local_start' => '61841142000'
  },
  {
    'short_name' => 'SLST',
    'utc_end' => '61872678000',
    'utc_start' => '61864732800',
    'local_end' => '61872681600',
    'is_dst' => 1,
    'offset' => 3600,
    'local_start' => '61864736400'
  },
  {
    'short_name' => '',
    'utc_end' => DateTime::TimeZone::INFINITY,
    'utc_start' => '61872678000',
    'offset' => 0
  }
]
;

my $max_year = 2013;

sub _new_instance
{
    return shift->_init( @_, spans => $spans );
}



1;

